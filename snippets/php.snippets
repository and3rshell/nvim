snippet <
	<?php

	${0:${VISUAL}}
snippet declst
	declare(strict_types=${1:1});
snippet e
	echo ${0};
snippet ?e
	<?php echo ${0} ?>
snippet ?=
	<?= ${0} ?>
snippet ?
	<?php ${0} ?>
snippet ?f
	<?php foreach ($${1:array} as $${2:$value}): ?>
		${0:${VISUAL}}
	<?php endforeach ?>
snippet ?fk
	<?php foreach ($${1:array} as $${2:key} => $${3:value}): ?>
		${0:<!-- html... -->}
	<?php endforeach; ?>
snippet ?if
	<?php if ($${1:var}): ?>
		${0:${VISUAL}}
	<?php endif ?>
snippet ?ife
	<?php if (${1}): ?>
		${2}
	<?php else: ?>
		${0:${VISUAL}}
	<?php endif; ?>
snippet ?ifee
	<?php if (${1}): ?>
		${2}
	<?php else if (${3}): ?>
		${4}
	<?php else: ?>
		${0:${VISUAL}}
	<?php endif; ?>
snippet name
	namespace ${1};
	
	${0:${VISUAL}}
snippet cl
	class ${1:`vim_snippets#Filename()`}
	{
		${0:${VISUAL}}
	}
snippet abscl
	abstract class ${1:`vim_snippets#Filename()`}
	{
		${0:${VISUAL}}
	}
snippet int
	interface ${1:`vim_snippets#Filename()`}
	{
		${0:${VISUAL}}
	}
snippet t
	\$this->
snippet fun
	${1} function ${2}(${3})
	{
		${0:${VISUAL}}
	}
snippet funa
	function (${1}) {
		${2}
	}${0}
snippet if
	if (${1}) {
		${2}
	} ${0:${VISUAL}}
snippet ifn
	if (!${1}) {
		${2}
	} ${0:${VISUAL}}
snippet ife
	if (${1}) {
		${2}
	} else {
		${0:${VISUAL}}
	}
snippet ifen
	if (!${1}) {
		${2}
	} else {
		${0:${VISUAL}}
	}
snippet elseif
	else if (${1}) {
		${0:${VISUAL}}
	}
snippet else
	else {
		${0:${VISUAL}}
	}
snippet ift
	$${1:foo} = ${2:true} ? ${3:a} : ${0};
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3}
			break;
		${0}
		default:
			${4}
			break;
	}
snippet case
	case '${1:value}':
		${0:${VISUAL}}
		break;
snippet for
	for ($${1:index} = 0; $$2 < ${2:count}; $$2${3:++}) {
		${0:${VISUAL}}
	}
snippet while
	while ($${1:var}) {
		${0:${VISUAL}}
	}
snippet do
	do {
		${0:${VISUAL}}
	} while ($${1:var})
snippet fore
	foreach ($${1:var} as $${2:value}) {
		${0:${VISUAL}}
	}
snippet forek
	foreach ($${1:var} as $${2:key} => $${3:value}) {
		${0:${VISUAL}}
	}
snippet try
	try {
		${1}
	} catch (${2:Exception} $e) {
		${0:${VISUAL}}
	}
snippet vard
	var_dump(${0});
snippet vardd
	var_dump(${1});
	die(${0:});
snippet html5
	<!doctype html>
	<html lang="en" dir="ltr">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<title>${1}</title>
		<meta name="description" content="put description here">
		<meta name="author" content="your name">
	</head>
	<body>
		<h1>Hi</h1>
	</body>
	</html>
snippet match
	match (${1}) {
		${2} => ${3},
		${4} => ${5},
	};
